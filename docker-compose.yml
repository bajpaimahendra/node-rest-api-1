version: '3'

services:
  nodeJsRestApiService:
    build:
      context: . # path of directory containing a Dockerfile, or a url to a git repository.
      dockerfile: Dockerfile
      network: host # use host network, because mongo is running on HOST machine
    network_mode: host
    image: nodejs-js-my-img
    container_name: node-js-my-container
    restart: unless-stopped #always
    # env_file: .env
    # environment:
    #   - MONGO_USERNAME=$MONGO_USERNAME
    #   - MONGO_PASSWORD=$MONGO_PASSWORD
    #   - MONGO_HOSTNAME=db
    #   - MONGO_PORT=$MONGO_PORT
    #   - MONGO_DB=$MONGO_DB
    # ports:
    #   - "3010:3010"
    volumes:
      - .:/home/node-rest-api
      - node_modules:/home/node-rest-api/node_modules
    # networks:
    #   - app-network
    #command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    command: npm start  # this will override CMD instruction if set in  Dockerfile

  # db:
  #   image: mongo:4.1.8-xenial
  #   container_name: db
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
  #     - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
  #   volumes:
  #     - dbdata:/data/db
  #   networks:
  #     - app-network


# networks:
#   app-network:
#     driver: bridge

volumes:
  # dbdata:
  node_modules: